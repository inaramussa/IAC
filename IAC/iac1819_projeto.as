; Inara Parbato 91110
; Ricardo Calvao 92545
				ORIG	8000h
V0			    WORD	60
T			    WORD	1
X0			    WORD	0
Y0			    WORD	0
ANG			    WORD	90
TAB_COS			STR		0000000001000000b, 0000000000111111b, 0000000000111111b, 0000000000111111b, 0000000000111111b, 0000000000111111b, 0000000000111111b, 0000000000111111b, 0000000000111111b, 0000000000111111b, 0000000000111111b, 0000000000111110b, 0000000000111110b, 0000000000111110b, 0000000000111110b, 0000000000111101b, 0000000000111101b, 0000000000111101b, 0000000000111100b, 0000000000111100b, 0000000000111100b, 0000000000111011b, 0000000000111011b, 0000000000111010b, 0000000000111010b, 0000000000111010b, 0000000000111001b, 0000000000111001b, 0000000000111000b, 0000000000110111b, 0000000000110111b, 0000000000110110b, 0000000000110110b, 0000000000110101b, 0000000000110101b, 0000000000110100b, 0000000000110011b, 0000000000110011b, 0000000000110010b, 0000000000110001b, 0000000000110001b, 0000000000110000b, 0000000000101111b, 0000000000101110b, 0000000000101110b, 0000000000101101b, 0000000000101100b, 0000000000101011b, 0000000000101010b, 0000000000101001b, 0000000000101001b, 0000000000101000b, 0000000000100111b, 0000000000100110b, 0000000000100101b, 0000000000100100b, 0000000000100011b, 0000000000100010b, 0000000000100001b, 0000000000100000b, 0000000000100000b, 0000000000011111b, 0000000000011110b, 0000000000011101b, 0000000000011100b, 0000000000011011b, 0000000000011010b, 0000000000011001b, 0000000000010111b, 0000000000010110b, 0000000000010101b, 0000000000010100b, 0000000000010011b, 0000000000010010b, 0000000000010001b, 0000000000010000b, 0000000000001111b, 0000000000001110b, 0000000000001101b, 0000000000001100b, 0000000000001011b, 0000000000001010b, 0000000000001000b, 0000000000000111b, 0000000000000110b, 0000000000000101b, 0000000000000100b, 0000000000000011b, 0000000000000010b, 0000000000000001b, 0000000000000000b

			    ORIG	0000h
			    MOV		R1, fdffh
			    MOV		SP, R1
			    MOV		R1, M[X0]
			    SHL		R1, 6 ; neste trabalho os numeros serao representados em 16 bits, com os primeiros 10 representando a parte inteira e os restantes a parte decimal
			    MOV		R2, M[Y0]
			    SHL		R2, 6
			    MOV		R3, M[V0]
			    SHL		R3, 6
			    MOV		R4, M[T]
			    SHL		R4, 6
			    MOV		R5, M[ANG]
			    PUSH	R0
			    PUSH	R0
			    PUSH	R4
			    PUSH	R5
			    PUSH	R3
			    PUSH	R1
			    PUSH	R2
			    CALL	func_pos
			    POP		R2 ; posicao y calculada
			    POP		R1
fim:			BR		fim
			
func_pos:	    PUSH	R1
			    PUSH	R2
			    PUSH	R3
			    PUSH	R4
			    PUSH	R5
			    PUSH	R6
			    PUSH	R7
			    MOV		R1, M[SP + 10]
			    MOV		R2, M[SP + 11]
			    MOV		R3, M[SP + 13]
			    MOV		R4, M[SP + 12]
			    PUSH	R0
			    PUSH	R4
			    CALL	cos ; funcao para calcular o coseno do angulo
			    POP		R5
			    MOV		R6, R3
			    MOV		R7, R2
			    MUL		R6, R7
			    PUSH	R0
			    PUSH	R6
			    PUSH	R7
			    CALL	convert ; converter o resultado para guardalo num so registo
			    POP		R7
			    MUL		R5, R7
			    PUSH	R0
			    PUSH	R5
			    PUSH	R7
			    CALL	convert
			    POP		R7
			    ADD		R7, R1
			    MOV		M[SP + 15], R7
			    MOV		R1, M[SP + 9]
			    PUSH	R0
			    PUSH	R4
			    CALL	sin ; funcao para calcular o seno do angulo
			    POP		R5
			    MOV		R6, R3
			    MOV		R7, R2
			    MUL		R6, R7
			    PUSH	R0
			    PUSH	R6
			    PUSH	R7
			    CALL	convert
			    POP		R7
			    MUL		R5, R7
			    PUSH	R0
			    PUSH	R5
			    PUSH	R7
			    CALL	convert	
			    POP		R5
			    MOV		R6, R3
			    MOV		R7, R3
			    MUL		R6, R7
			    PUSH	R0
			    PUSH	R6
			    PUSH	R7
			    CALL	convert	
			    POP		R6
			    MOV		R7, 0000000100111001b ; R7 <- 4,9 = g/2
			    MUL		R6, R7
			    PUSH	R0
			    PUSH	R6
			    PUSH	R7
			    CALL	convert	
			    POP		R6
			    SUB		R5, R6
			    MOV		M[SP + 14], R5
			    POP		R7
			    POP		R6
			    POP		R5
			    POP		R4
			    POP		R3
			    POP		R2
			    POP		R1
			    RETN	5
		
convert:	    PUSH	R1
			    PUSH	R2
			    PUSH	R3
			    MOV		R1, M[SP + 6]
			    MOV		R2, M[SP + 5]
			    MOV		R3, 6
cv_loop:	    DEC		R3
			    SHR		R1, 1
			    RORC	R2, 1
			    CMP 	R3, R0
			    BR.NZ	cv_loop
			    MOV		M[SP + 7], R2
			    POP		R3
			    POP		R2
			    POP		R1
			    RETN	2
			
sin:		    PUSH	R1
				PUSH	R2
				MOV		R1, M[SP + 4]
				SUB		R1, 90
				NEG		R1
				MOV		R2, TAB_COS
				ADD		R2, R1
                MOV     R1, M[R2]
				MOV		M[SP + 5], R1
				POP		R2
				POP		R1
				RETN	1
			
cos:		    PUSH	R1
				PUSH	R2
				MOV		R1, M[SP + 4]
				MOV		R2, TAB_COS
				ADD		R2, R1
                MOV     R1, M[R2]
				MOV		M[SP + 5], R1
				POP		R2
				POP		R1
				RETN	1